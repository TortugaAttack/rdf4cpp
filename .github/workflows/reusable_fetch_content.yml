on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      compiler:
        required: true
        type: string
      cmake-version:
        required: true
        type: string
      build-shared-libs:
        required: true
        type: boolean

jobs:
  test-cmake-fetch-content:
    name: Test cmake FetchContent (${{ fromJSON('["static", "shared"]')[inputs.build-shared-libs] }})
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Add Repos for for gcc-13 and clang-17
        run: |
          # gcc-13
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y

          # clang-17
          source /etc/os-release
          echo "deb http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME}-17 main" | sudo tee /etc/apt/sources.list.d/llvm-17.list
          curl https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/llvm.gpg > /dev/null

      - name: Get minimum cmake version
        uses: lukka/get-cmake@v3.24.3
        with:
          cmakeVersion: ${{ inputs.cmake-version }}

      - name: Ensure stdlib version
        run: |
          sudo apt install libstdc++-13-dev -y

      - name: Install compiler
        id: install_cc
        uses: rlalik/setup-cpp-compiler@v1.2
        with:
          compiler: ${{  inputs.compiler }}

      - name: use mold as default linker
        uses: rui314/setup-mold@v1

      - name: Install systemlib boost for FetchContent
        run: |
          # FetchContent does not handle transitive dependencies and doesn't run conan.
          sudo apt-get install libboost-math-dev

      - name: Check out sources
        uses: actions/checkout@v3

      - name: Test cmake FetchContent
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
        working-directory: test_FetchContent
        run: |
          cmake -G Ninja -B build_fetch_content -DBUILD_TESTING=ON -DBUILD_EXAMPLES=ON ${{ fromJSON('["", "-DBUILD_SHARED_LIBS=ON"]')[inputs.build-shared-libs] }}
          cmake --build build_fetch_content

      - name: Run test executable
        working-directory: test_FetchContent/build_fetch_content
        run: |
          ./test_FetchContent
