name: Tests and Examples
on: [ 'push', 'pull_request' ]
jobs:
  test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        config:
          #          - {
          #            name: "windows-latest",
          #            os: windows-latest,
          #          }
          #          - {
          #            name: "macos-latest",
          #            os: macos-latest,
          #          }
          - {
            name: "ubuntu-latest g++-10",
            os: ubuntu-latest,
            cc: "gcc-10",
            cxx: "g++-10",
          }
          - {
            name: "ubuntu-latest clang++-10",
            os: ubuntu-latest,
            cc: "clang-10",
            cxx: "clang++-10",
          }
    steps:
      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        run: choco install cmake ninja
      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: brew install cmake ninja
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \
            | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
          sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
          sudo apt update
          sudo apt install cmake ninja-build g++-10 clang-10 libserd-dev python3 python3-pip curl
          sudo pip install gcovr
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/${{ matrix.config.cxx }} 90
          sudo update-alternatives --config c++
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/${{ matrix.config.cc }} 90
          sudo update-alternatives --config cc
      - name: Enable Developer Command Prompt
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      - name: Check out sources
        uses: actions/checkout@v2
      - name: Build Tests
        run: |
          cmake -G Ninja -B build_tests -Drdf4cpp_BUILD_TESTS=ON
          cmake --build build_tests
      - name: Run tests
        run: |
          ctest --test-dir build_tests
      - name: Build Examples
        run: |
          cmake -G Ninja -B build_examples -Drdf4cpp_BUILD_EXAMPLES=ON
          cmake --build build_examples
      - name: Coverage
        if: matrix.config.cxx == 'g++-10'
        run: |
          cmake -B build_coverage -D  rdf4cpp_BUILD_TESTS=ON -DCMAKE_CXX_FLAGS=--coverage
          cmake --build build_coverage
          gcovr --coveralls --filter 'src/' -o coverage.json -r ./
          curl -F "json_file=@coverage.json" https://coveralls.io/api/v1/jobs
      - name: Run Examples
        run: |
          cd build
          examples/graphs_and_datasets_example
          examples/literal_datatypes_example
          examples/rdf_nodes_example
