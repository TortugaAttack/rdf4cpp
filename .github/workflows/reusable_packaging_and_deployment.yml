on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      cmake-version:
        required: true
        type:
          string
      compiler:
        required: true
        type: string

jobs:
  build-and-test-conan-package:
    name: Build and test conan package
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Add Repos for for gcc-13 and clang-16,17
        uses: dice-group/cpp-conan-release-reusable-workflow/.github/actions/setup_apt@feature/conan2_utils

      - name: Ensure stdlib version
        run: |
          sudo apt install libstdc++-13-dev jq -y

      - name: Get minimum cmake version
        uses: lukka/get-cmake@v3.29.3
        with:
          cmakeVersion: ${{ inputs.cmake-version }}

      - name: Install compiler
        id: install_cc
        uses: rlalik/setup-cpp-compiler@v1.2
        with:
          compiler: ${{  inputs.compiler }}

      - name: use mold as default linker
        uses: rui314/setup-mold@v1

      - name: Configure conan
        uses: dice-group/cpp-conan-release-reusable-workflow/.github/actions/configure_conan@feature/conan2_utils
        with:
          conan-version: 2.3.1

      - name: add conan user
        run: |
          conan remote add -f dice-group https://conan.dice-research.org/artifactory/api/conan/tentris

      - name: Cache conan data
        id: cache-conan
        uses: actions/cache@v4.0.2
        with:
          path: ~/.conan2/p
          key: ${{ inputs.os }}-${{ inputs.compiler }}-conan2

      - name: Check out sources
        uses: actions/checkout@v3

      - name: Test conan package
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
        run: |
          # build and test package
          pkg_name=$(conan inspect --format json . | jq -r '.name')
          pkg_ver=$(conan inspect --format json . | jq -r '.version')
          
          conan create . --name "${pkg_name}" --version "${pkg_ver}" --user ci --channel testing -pr:b=default --build missing -o boost/*:header_only=True
          conan remove -f {pkg_name}/${pkg_ver}@ci/testing
